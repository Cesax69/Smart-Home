services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: smart-home-postgres
    environment:
      POSTGRES_DB: smart_home_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: linux
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/setup-database.sql:/docker-entrypoint-initdb.d/setup-database.sql
    networks:
      - smart-home-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d smart_home_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API Gateway
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    container_name: smart-home-api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - USERS_SERVICE_URL=http://users-service:3001
      - TASKS_SERVICE_URL=http://tasks-service:3002
      - NOTIFICATIONS_SERVICE_URL=http://notifications-service:3003
      - FILE_UPLOAD_SERVICE_URL=http://file-upload-service:3004
    depends_on:
      - users-service
      - tasks-service
      - notifications-service
      - file-upload-service
    networks:
      - smart-home-network
    restart: unless-stopped

  # Users Service
  users-service:
    build:
      context: ./backend/users-service
      dockerfile: Dockerfile
    container_name: smart-home-users-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=smart_home_db
      - DB_USER=postgres
      - DB_PASSWORD=linux
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - smart-home-network
    restart: unless-stopped

  # Tasks Service
  tasks-service:
    build:
      context: ./backend/tasks-service
      dockerfile: Dockerfile
    container_name: smart-home-tasks-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=smart_home_db
      - DB_USER=postgres
      - DB_PASSWORD=linux
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - smart-home-network
    restart: unless-stopped

  # Notifications Service
  notifications-service:
    build:
      context: ./backend/notifications-service
      dockerfile: Dockerfile
    container_name: smart-home-notifications-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - WHATSAPP_API_URL=https://api.whatsapp.com/send
      - WEBHOOK_SECRET=your-webhook-secret-change-in-production
    networks:
      - smart-home-network
    restart: unless-stopped

  # File Upload Service
  file-upload-service:
    build:
      context: ./backend/file-upload-service
      dockerfile: Dockerfile
    container_name: smart-home-file-upload-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=production
      - MAX_FILE_SIZE=10485760
      - ALLOWED_EXTENSIONS=jpg,jpeg,png,gif,pdf,doc,docx,txt
    volumes:
      - file_uploads:/app/uploads
      - file_temp:/app/temp
      - file_quarantine:/app/quarantine
    networks:
      - smart-home-network
    restart: unless-stopped

networks:
  smart-home-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  file_uploads:
    driver: local
  file_temp:
    driver: local
  file_quarantine:
    driver: local